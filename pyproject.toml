[tool.poetry]
authors = [
  "Chenghao Lyu <chenghao@cs.umass.edu>",
  "Julien Fontanarava <julien.fontanarava@gmail.com>",
]
description = "" # Optional
license = "MIT"
maintainers = [
  "Chenghao Lyu <chenghao@cs.umass.edu>", # Optional
]
name = "udao" # Required
readme = "README.md" # Optional
version = "1.0.0" # Required

# Classifiers help users find your project by categorizing it.
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
]

[tool.poetry.dependencies]
Platypus-Opt = "1.1.0"
cuda-python = {version = "11.8", source = "PyPI", markers = "sys_platform == 'linux'"}
dgl = [
  {version = "1.1.3", source = "PyPI", markers = "sys_platform == 'darwin'"},
  {version = "1.1.3", source = "dgl", markers = "sys_platform == 'linux'"},
]
dglgo = {version = "0.0.2", source = "PyPI", markers = "sys_platform == 'linux'"}
gensim = "4.3.2"
lightning = "2.1.0"
matplotlib = "3.8.1"
mypy = "1.5.1"
mypy_extensions = "1.0.0"
networkx = "2.8.8"
networkx-stubs = "0.0.1"
numpy = "1.26.1"
pandas = "2.1.1"
pandas-stubs = "2.1.1.230928"
python = ">=3.9, <3.13"
pytorch-warmup = "0.1.1"
scikit-learn = "1.3.1"
tensorboard = "2.15.1"
torch = [
  {version = "2.0.1+cu118", source = "pytorch", markers = "sys_platform == 'linux'"},
  {version = "2.0.1", source = "PyPI", markers = "sys_platform == 'darwin'"},
]
torchmetrics = "1.2.0"

[[tool.poetry.source]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu118"
priority = "explicit"


[[tool.poetry.source]]
name = "PyPI"
priority = "primary"


[[tool.poetry.source]]
name = "dgl"
url = "https://data.dgl.ai/wheels/cu118"
priority = "primary"

[tool.poetry.group.dev.dependencies]
pre-commit = "3.4.0"
pytest = "7.4.2"
pytest-cov = "4.1.0"
pytest-mock = "3.12.0"
requests = "2.31.0"
types-requests = "2.31.0.10"


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
chardet = "5.2.0"
sphinx = "^7.0.0"
sphinx-book-theme = "*"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
